#include <iostream>
#include <deque>
using namespace std;
int max_each_subarray(int arr[], int size, int k)
{
      deque<int> dq;
      for(int i=0; i<k; i++)
      {
      	   if(dq.empty())
      	   {
      	   	   dq.push_back(i);
      	   }
      	   else
      	   { 
      	   	  while(!dq.empty() && arr[i]>arr[dq.back()])
      	     {
      	     	dq.pop_back();
      	     }
      	     dq.push_back(i);
      	   
      	   }
      }
      for(int i=k; i<size; i++)
      {
      	cout<<arr[dq.front()]<<endl;
      	if(dq.front()<(i-k+1))
      	{
      		 dq.pop_front();
      	}
      	while(!dq.empty() && arr[i]>arr[dq.back()])
      	     {
      	     	dq.pop_back();
      	     }
      	     dq.push_back(i);
      }
      cout<<arr[dq.front()];
      
}
int main() {
	
	int arr[] = {9,6,11,8,10,5,4,13,93,14};
	int k = 4;
	max_each_subarray(arr, 10, k);
	return 0;
}
