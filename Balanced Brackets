#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <unordered_map>

using namespace std;

bool is_balanced(string expression) {
    
     stack<char> brackets;
     int size = expression.size();
     int i = 0;
     while(i<=size-1)
     {
         if(expression[i] =='(' || expression[i] =='{' || expression[i] =='[')      
               brackets.push(expression[i]);
         else
             if(expression[i] ==')' || expression[i] =='}' || expression[i] ==']')
         {
               if(brackets.empty())
                   return 0;
               else
               {
                   if(brackets.top() =='(' && expression[i] ==')')
                  {   brackets.pop(); 
                   i=i+1;
                   continue;
                
                  }
                   if(brackets.top() =='{' && expression[i] =='}')
                   {   brackets.pop(); 
                          i=i+1;              

                   continue;
                
                  }
                   if(brackets.top() =='[' && expression[i] ==']')
                   {   brackets.pop(); 
                    i=i+1; 
                   continue;
                
                   }
                   else
                     return 0;
               }
         }
         i = i+1;
     }
    if(brackets.empty())
        return 1;
    else
        return 0;
     
}

int main(){
    int t;
    cin >> t;
    for(int a0 = 0; a0 < t; a0++){
        string expression;
        cin >> expression;
        bool answer = is_balanced(expression);
        if(answer)
            cout << "YES\n";
        else cout << "NO\n";
    }
    return 0;
}
