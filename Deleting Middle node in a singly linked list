#include <iostream>
using namespace std;
struct node
{
     int data;
     node* next;
};
void create_new_node(struct node** head, int data)
{
	 
	
	 	   struct node * new_node = (node*)malloc(sizeof(node));
	       new_node->data = data;
	       new_node->next = NULL;
	       new_node->next = *head;
	       *head = new_node;
	       
	 
}
void print_ll(struct node* temp)
{
	 
	 while(temp!=NULL)
	 {  cout<<temp->data;
	    temp = temp->next;
	 }
	 cout<<endl;
}
void reverse_ll(node* curr, node* prev, node** head)
{
	 if(!curr->next)
	 {
	 	  *head = curr;
	 	  curr->next = prev;
	 	  return;
	 }
	 node* next = curr->next;
	 curr->next = prev;
	 reverse_ll(next, curr,head);
}
void reverse(node** head)
{
	  if(!head)
	    return;
	  reverse_ll(*head, NULL, head);   
}
void delete_middle_node(node* middle)
{
	 node* temp = middle->next;
	 middle->data = middle->next->data;
	 middle->next = middle->next->next;
	 free(temp);
}
int main() {
	struct node* head = NULL;
    create_new_node(&head,4);
    create_new_node(&head,3);
    create_new_node(&head,2);
    create_new_node(&head,1);
    delete_middle_node(head->next->next);
    print_ll(head);
	return 0;
}
